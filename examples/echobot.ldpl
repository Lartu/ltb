# +------------------------------------------+
# |         ltb - LDPL Telegram Bot          |
# +------------------------------------------+
# | by Dami√°n Garro                          |
# | https://github.com/dgarroDC/ltb          |
# +------------------------------------------+
# | Echobot example:                         |
# | This bot repeats every sent message      |
# | and when a user joins or leaves the chat |
# +------------------------------------------+

INCLUDE "../ltb.ldpl"
INCLUDE "token.ldpl"

PROCEDURE:

TG BOT INIT WITH TOKEN token

# This sub-procedure is called each time a new text message arrives.
# Captions in animation, audio, document, photo, video or voice are captured too.
sub ltb.onMessage
parameters:
    messageId is number     # id of the sent message
    chatId is number        # id of the chat where is was sent
    userData is text map    # user data from sender
    messageText is text     # content of the message
local data:
    myMessage is text
procedure:
    in myMessage join "*" userData:"first_name" "*: " messageText
    store "Markdown" in ltb.send.options:"format"
    TG BOT SEND MESSAGE myMessage TO chatId
end sub

# This sub-procedure is called each time a user joins a chat.
sub ltb.onJoin
parameters:
    messageId is number     # id of the sent message announcing the user join
    chatId is number        # id of the chat the user joined
    userData is text map    # user data from the user who joined the chat
local data:
    myMessage is text
procedure:
    in myMessage join userData:"first_name" " joined the chat."
    TG BOT SEND MESSAGE myMessage TO chatId
end sub

# This sub-procedure is called each time a user leaves a chat.
sub ltb.onDeparture
parameters:
    messageId is number     # id of the sent message announcing the user departure
    chatId is number        # id of the chat the user left
    userData is text map    # user data from the user who left the chat
local data:
    myMessage is text
procedure:
    in myMessage join userData:"first_name" " left the chat."
    TG BOT SEND MESSAGE myMessage TO chatId
end sub

# This sub-procedure is called each time a user press a button with callback data.
sub ltb.onCallbackQuery
parameters:
    chatId is number        # id of the chat from the message of the button that was pressed
    userData is text map    # user data from the user who pressed the button
    callbackData is text    # callback data from the pressed button
    answerText is text      # store a text here to display a notification to the user
    answerAlert is number   # store 1 here to show answerText as an alert instead of a notification at the top of the chat screen
procedure:
    # I don't use this sub-procedure :)
end sub